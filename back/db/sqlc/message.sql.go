// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: message.sql

package db

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const createMessage = `-- name: CreateMessage :one
INSERT INTO messages (
    id,
    user_id,
    room_id,
    message,
    created_at
) VALUES (
    $1, $2, $3, $4, $5
) RETURNING id, user_id, room_id, message, created_at
`

type CreateMessageParams struct {
	ID        uuid.UUID
	UserID    int32
	RoomID    uuid.NullUUID
	Message   string
	CreatedAt time.Time
}

func (q *Queries) CreateMessage(ctx context.Context, arg CreateMessageParams) (Message, error) {
	row := q.db.QueryRowContext(ctx, createMessage,
		arg.ID,
		arg.UserID,
		arg.RoomID,
		arg.Message,
		arg.CreatedAt,
	)
	var i Message
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.RoomID,
		&i.Message,
		&i.CreatedAt,
	)
	return i, err
}

const getMessage = `-- name: GetMessage :one
SELECT id, user_id, room_id, message, created_at FROM messages WHERE id = $1
`

func (q *Queries) GetMessage(ctx context.Context, id uuid.UUID) (Message, error) {
	row := q.db.QueryRowContext(ctx, getMessage, id)
	var i Message
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.RoomID,
		&i.Message,
		&i.CreatedAt,
	)
	return i, err
}

const getMessagesByRoom = `-- name: GetMessagesByRoom :one
SELECT id, user_id, room_id, message, created_at FROM messages WHERE room_id = $1 ORDER BY created_at
`

func (q *Queries) GetMessagesByRoom(ctx context.Context, roomID uuid.NullUUID) (Message, error) {
	row := q.db.QueryRowContext(ctx, getMessagesByRoom, roomID)
	var i Message
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.RoomID,
		&i.Message,
		&i.CreatedAt,
	)
	return i, err
}
